from PyQt5 import QtCore, QtGui, QtWidgets

from PIL import Image

from imgCompress import imgSeg

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(720, 480)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(720, 480))
        MainWindow.setMaximumSize(QtCore.QSize(720, 480))
        MainWindow.setLocale(QtCore.QLocale(QtCore.QLocale.Vietnamese, QtCore.QLocale.Vietnam))
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        MainWindow.setDocumentMode(False)
        MainWindow.setDockNestingEnabled(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.boxTool = QtWidgets.QGroupBox(self.centralwidget)
        self.boxTool.setGeometry(QtCore.QRect(8, 0, 701, 91))
        self.boxTool.setObjectName("boxTool")
        self.gridLayoutWidget = QtWidgets.QWidget(self.boxTool)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 10, 701, 72))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.lytToolBox = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.lytToolBox.setContentsMargins(10, 0, 10, 0)
        self.lytToolBox.setSpacing(10)
        self.lytToolBox.setObjectName("lytToolBox")
        self.lytMaxIter = QtWidgets.QHBoxLayout()
        self.lytMaxIter.setObjectName("lytMaxIter")
        self.radioCustomK = QtWidgets.QRadioButton(self.gridLayoutWidget)
        self.radioCustomK.setChecked(True)
        self.radioCustomK.setObjectName("radioCustomK")
        self.lytMaxIter.addWidget(self.radioCustomK)
        self.spinCustomK = QtWidgets.QSpinBox(self.gridLayoutWidget)
        self.spinCustomK.setMinimum(1)
        self.spinCustomK.setObjectName("spinCustomK")
        self.lytMaxIter.addWidget(self.spinCustomK)
        self.lytToolBox.addLayout(self.lytMaxIter, 2, 4, 1, 1)
        self.line2 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.line2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line2.setObjectName("line2")
        self.lytToolBox.addWidget(self.line2, 1, 3, 1, 1)
        self.line4 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.line4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line4.setObjectName("line4")
        self.lytToolBox.addWidget(self.line4, 2, 1, 1, 1)
        self.line5 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.line5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line5.setObjectName("line5")
        self.lytToolBox.addWidget(self.line5, 2, 3, 1, 1)
        self.btnOpen = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btnOpen.setObjectName("btnOpen")
        self.lytToolBox.addWidget(self.btnOpen, 1, 0, 1, 1)
        self.line1 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.line1.setFrameShape(QtWidgets.QFrame.VLine)
        self.line1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line1.setObjectName("line1")
        self.lytToolBox.addWidget(self.line1, 1, 1, 1, 1)
        self.lytCustomK = QtWidgets.QHBoxLayout()
        self.lytCustomK.setObjectName("lytCustomK")
        self.radioDerivative = QtWidgets.QRadioButton(self.gridLayoutWidget)
        self.radioDerivative.setObjectName("radioDerivative")
        self.lytCustomK.addWidget(self.radioDerivative)
        self.lytToolBox.addLayout(self.lytCustomK, 2, 2, 1, 1)
        self.radioElbow = QtWidgets.QRadioButton(self.gridLayoutWidget)
        self.radioElbow.setEnabled(True)
        self.radioElbow.setObjectName("radioElbow")
        self.lytToolBox.addWidget(self.radioElbow, 2, 0, 1, 1)
        self.btnShowRes = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btnShowRes.setObjectName("btnShowRes")
        self.lytToolBox.addWidget(self.btnShowRes, 1, 4, 1, 1)
        self.btnExport = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btnExport.setObjectName("btnExport")
        self.lytToolBox.addWidget(self.btnExport, 1, 2, 1, 1)
        self.btnShowOri = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btnShowOri.setObjectName("btnShowOri")
        self.lytToolBox.addWidget(self.btnShowOri, 1, 6, 1, 1)
        self.line3 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.line3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line3.setObjectName("line3")
        self.lytToolBox.addWidget(self.line3, 1, 5, 1, 1)
        self.btnExecute = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btnExecute.setObjectName("btnExecute")
        self.lytToolBox.addWidget(self.btnExecute, 2, 6, 1, 1)
        self.line6 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.line6.setFrameShape(QtWidgets.QFrame.VLine)
        self.line6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line6.setObjectName("line6")
        self.lytToolBox.addWidget(self.line6, 2, 5, 1, 1)
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 90, 701, 341))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.lytDisplay = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.lytDisplay.setContentsMargins(0, 0, 0, 0)
        self.lytDisplay.setSpacing(19)
        self.lytDisplay.setObjectName("lytDisplay")
        self.boxOri = QtWidgets.QGroupBox(self.horizontalLayoutWidget)
        self.boxOri.setObjectName("boxOri")
        self.lblOri = QtWidgets.QLabel(self.boxOri)
        self.lblOri.setGeometry(QtCore.QRect(10, 20, 321, 310))
        self.lblOri.setText("")
        self.lblOri.setAlignment(QtCore.Qt.AlignCenter)
        self.lblOri.setObjectName("lblOri")
        self.lytDisplay.addWidget(self.boxOri)
        self.boxRes = QtWidgets.QGroupBox(self.horizontalLayoutWidget)
        self.boxRes.setObjectName("boxRes")
        self.lblRes = QtWidgets.QLabel(self.boxRes)
        self.lblRes.setGeometry(QtCore.QRect(10, 20, 321, 310))
        self.lblRes.setText("")
        self.lblRes.setObjectName("lblRes")
        self.lytDisplay.addWidget(self.boxRes)
        self.boxInfo = QtWidgets.QGroupBox(self.centralwidget)
        self.boxInfo.setGeometry(QtCore.QRect(10, 440, 701, 32))
        self.boxInfo.setTitle("")
        self.boxInfo.setObjectName("boxInfo")
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.boxInfo)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(0, 0, 701, 31))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.lytInfo = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.lytInfo.setContentsMargins(0, 0, 0, 0)
        self.lytInfo.setObjectName("lytInfo")
        self.lblK = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.lblK.setObjectName("lblK")
        self.lytInfo.addWidget(self.lblK)
        self.lblResK = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.lblResK.setText("")
        self.lblResK.setObjectName("lblResK")
        self.lytInfo.addWidget(self.lblResK)
        self.line7 = QtWidgets.QFrame(self.horizontalLayoutWidget_2)
        self.line7.setFrameShape(QtWidgets.QFrame.VLine)
        self.line7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line7.setObjectName("line7")
        self.lytInfo.addWidget(self.line7)
        self.lblSize = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.lblSize.setObjectName("lblSize")
        self.lytInfo.addWidget(self.lblSize)
        self.lblResSize = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.lblResSize.setText("")
        self.lblResSize.setObjectName("lblResSize")
        self.lytInfo.addWidget(self.lblResSize)
        self.line8 = QtWidgets.QFrame(self.horizontalLayoutWidget_2)
        self.line8.setFrameShape(QtWidgets.QFrame.VLine)
        self.line8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line8.setObjectName("line8")
        self.lytInfo.addWidget(self.line8)
        self.lblReduce = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.lblReduce.setObjectName("lblReduce")
        self.lytInfo.addWidget(self.lblReduce)
        self.lblResReduce = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.lblResReduce.setText("")
        self.lblResReduce.setObjectName("lblResReduce")
        self.lytInfo.addWidget(self.lblResReduce)
        self.line9 = QtWidgets.QFrame(self.horizontalLayoutWidget_2)
        self.line9.setFrameShape(QtWidgets.QFrame.VLine)
        self.line9.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line9.setObjectName("line9")
        self.lytInfo.addWidget(self.line9)
        self.lblPercent = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.lblPercent.setObjectName("lblPercent")
        self.lytInfo.addWidget(self.lblPercent)
        self.lblResPercent = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.lblResPercent.setText("")
        self.lblResPercent.setObjectName("lblResPercent")
        self.lytInfo.addWidget(self.lblResPercent)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #event
        self.btnOpen.clicked.connect(self.funcBtnOpen)
        self.btnExport.clicked.connect(self.funcBtnExport)
        self.btnShowOri.clicked.connect(self.funcBtnShowOri)
        self.btnShowRes.clicked.connect(self.funcBtnShowRes)
        self.btnExecute.clicked.connect(self.funcBtnExecute)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Compress image using K-Means Clustering"))
        self.boxTool.setTitle(_translate("MainWindow", "Tool box"))
        self.radioCustomK.setText(_translate("MainWindow", "Custom K"))
        self.btnOpen.setText(_translate("MainWindow", "Open image"))
        self.radioDerivative.setText(_translate("MainWindow", "Optimal K (base on size)"))
        self.radioElbow.setText(_translate("MainWindow", "Optimal K (base on exp_var)"))
        self.btnShowRes.setText(_translate("MainWindow", "Show compressed image"))
        self.btnExport.setText(_translate("MainWindow", "Export image"))
        self.btnShowOri.setText(_translate("MainWindow", "Show original image"))
        self.btnExecute.setText(_translate("MainWindow", "Execute"))
        self.boxOri.setTitle(_translate("MainWindow", "Original image"))
        self.boxRes.setTitle(_translate("MainWindow", "Result image"))
        self.lblK.setText(_translate("MainWindow", "Number of colors: "))
        self.lblSize.setText(_translate("MainWindow", "Image size: "))
        self.lblReduce.setText(_translate("MainWindow", "Size different: "))
        self.lblPercent.setText(_translate("MainWindow", "Explained variance: "))

    # gui func    
    def funcBtnOpen(self):
        openPath, _ = QtWidgets.QFileDialog.getOpenFileName()
        if(openPath != ""):
            oriPixmap = QtGui.QPixmap(openPath)
            oriImg = Image.open(openPath)
            ci.setOriImg(oriImg)
            self.spinCustomK.setMaximum(ci.ori_img_n_colors)
            self.lblResK.setText(str(ci.ori_img_n_colors))
            self.lblResSize.setText(str('{:.2f}'.format(ci.ori_img_size)) + "KB")
            self.lblResPercent.clear()
            self.lblResReduce.clear()
            self.lblRes.clear()
            self.lblOri.setPixmap(oriPixmap.scaled(self.lblOri.size(), QtCore.Qt.KeepAspectRatio))
            oriImg.show()

    def funcBtnExport(self):
        if(ci.res_img is None):
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Critical)
            msg.setText("You need to execute an image to continue!")
            msg.setWindowTitle("Error")
            msg.exec_()
        else:
            savePath, _ = QtWidgets.QFileDialog.getSaveFileName()
            if(savePath != ""):
                ci.res_img.save(savePath)

    def funcBtnShowOri(self):
        if(ci.ori_img is None):
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Critical)
            msg.setText("You need to open an image to continue!")
            msg.setWindowTitle("Error")
            msg.exec_()
        else:
            ci.ori_img.show()

    def funcBtnShowRes(self):
        if(ci.res_img is None):
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Critical)
            msg.setText("You need to execute an image to continue!")
            msg.setWindowTitle("Error")
            msg.exec_()
        else:
            ci.res_img.show()

    def funcBtnExecute(self):
        if(ci.ori_img is None):
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Critical)
            msg.setText("You need to open an image to continue!")
            msg.setWindowTitle("Error")
            msg.exec_()
        else:
            if(self.radioCustomK.isChecked()):
                nbCentroid = self.spinCustomK.value()
                ci.setKMeans(nbCentroid)
                ci.runKMeans()
                self.lblRes.setPixmap(ci.res_pixmap.scaled(self.lblOri.size(), QtCore.Qt.KeepAspectRatio))
                ci.res_img.show()
                self.lblResK.setText(str(nbCentroid) + " (" + str(ci.ori_img_n_colors) + ")")
                self.lblResSize.setText(str('{:.2f}'.format(ci.res_img_size)) + "KB (" + str('{:.2f}'.format(ci.ori_img_size)) + "KB)")
                self.lblResReduce.setText(str('{:.2f}'.format(100*ci.res_img_size/ci.ori_img_size-100)) + "%")
                self.lblResPercent.setText(str('{:.2f}'.format(ci.exp_var)) + "%")
            elif(self.radioDerivative.isChecked()):
                if(ci.k_means_res is None):
                    ci.calculateKMeansResult()
                optimal = ci.locateDrasticChange(ci.k_means_res.index, ci.k_means_res["IS"].values)
                ci.setKMeans(optimal)
                ci.runKMeans()
                self.lblRes.setPixmap(ci.res_pixmap.scaled(self.lblOri.size(), QtCore.Qt.KeepAspectRatio))
                ci.res_img.show()
                self.lblResK.setText(str(optimal) + " (" + str(ci.ori_img_n_colors) + ")")
                self.lblResSize.setText(str('{:.2f}'.format(ci.res_img_size)) + "KB (" + str('{:.2f}'.format(ci.ori_img_size)) + "KB)")
                self.lblResReduce.setText(str('{:.2f}'.format(100*ci.res_img_size/ci.ori_img_size-100)) + "%")
                self.lblResPercent.setText(str('{:.2f}'.format(ci.exp_var)) + "%")

            elif(self.radioElbow.isChecked()):
                if(ci.k_means_res is None):
                    ci.calculateKMeansResult()
                optimal = ci.locateOptimalElbow(ci.k_means_res.index, ci.k_means_res["EV"].values)
                ci.setKMeans(optimal)
                ci.runKMeans()
                self.lblRes.setPixmap(ci.res_pixmap.scaled(self.lblOri.size(), QtCore.Qt.KeepAspectRatio))
                ci.res_img.show()
                self.lblResK.setText(str(optimal) + " (" + str(ci.ori_img_n_colors) + ")")
                self.lblResSize.setText(str('{:.2f}'.format(ci.res_img_size)) + "KB (" + str('{:.2f}'.format(ci.ori_img_size)) + "KB)")
                self.lblResReduce.setText(str('{:.2f}'.format(100*ci.res_img_size/ci.ori_img_size-100)) + "%")
                self.lblResPercent.setText(str('{:.2f}'.format(ci.exp_var)) + "%")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    ci = imgSeg()
    sys.exit(app.exec_())